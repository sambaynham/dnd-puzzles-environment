services:
  #PHP Service
  dnd-puzzles-app:
    build:
      context: .
      dockerfile: dockerfiles/AppDockerfile
    container_name: dnd-puzzles-app
    tty: true
    restart: unless-stopped
    environment:
      SERVICE_NAME: dnd-puzzles-app
      SERVICE_TAGS: dev
    working_dir: /var/www
    ports:
      - "9096:9000"
    volumes:
      - ../dnd-puzzles-app/:/var/www
      - ./config/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./logs/php:/var/log/php/
    networks:
      - dnd-puzzles-network

  #Nginx Service
  dnd-puzzles-nginx:
    image: nginx:alpine
    container_name: dnd-puzzles-nginx
    restart: unless-stopped
    tty: true
    ports:
      - "8089:80"
      - "44455:443"
    volumes:
      - ../dnd-puzzles-app:/var/www
      - ./config/nginx/conf.d/:/etc/nginx/conf.d/
      - ./logs/nginx:/var/log/nginx/
    networks:
      - dnd-puzzles-network

  #Composer
  dnd-puzzles-composer:
    restart: 'no'
    image: composer
    command: install --ignore-platform-reqs --no-scripts
    volumes:
      - ../dnd-puzzles-app:/app

  #Node
  dnd-puzzles-node:
    restart: 'no'
    image: node:20

    command: bash -c "npm install && npm run build:watch --stats-children"
    working_dir: /app
    volumes:
      - ../dnd-puzzles-app:/app

  #MySQL Service
  dnd-puzzles-db:
    container_name: dnd-puzzles-db
    ports:
      - 33377:3306
    image: mariadb:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "r00t"
      MYSQL_DATABASE: dnd-puzzles
      MYSQL_USER: dnd-puzzles-user
      MYSQL_PASSWORD: "y2iomm9lw0SO"

    volumes:
      - dnd-puzzles-dbdata:/var/lib/mysql/
      - ./logs/mysql:/var/log/mysql
      - ./config/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - dnd-puzzles-network

  #Memcached
  dnd-puzzles-redis:
    image: redis:8.2-alpine
    restart: always
    ports:
      - '63799:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - dnd-puzzles-cache:/data

#Docker Networks
networks:
  dnd-puzzles-network:
    driver: bridge

#Volumes
volumes:
  dnd-puzzles-dbdata:
    driver: local
  dnd-puzzles-cache:
    driver: local
